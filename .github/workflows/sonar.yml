name: "SonarQube Cloud Scan"

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y nasm libwayland-dev wayland-protocols libgl1-mesa-dev libglu1-mesa-dev libasound2-dev pulseaudio libpulse-dev libcurl4-gnutls-dev

      - name: Checkout
        run: git clone --recurse-submodules --jobs 8 --branch master --depth 1 https://github.com/etlegacy/etlegacy .

      - name: Configure
        run: >
          cmake -S . -B build
          -DCMAKE_BUILD_TYPE='Debug' -DCMAKE_INSTALL_PREFIX=/
          -DCMAKE_LIBRARY_PATH=/usr/lib -DCMAKE_INCLUDE_PATH=/usr/include
          -DINSTALL_DEFAULT_BASEDIR=. -DINSTALL_DEFAULT_BINDIR=.
          -DINSTALL_DEFAULT_SHAREDIR=. -DINSTALL_DEFAULT_MODDIR=.
          -DCROSS_COMPILE32=0 -DBUNDLED_LIBS=1 -DINSTALL_EXTRA=0
          -DFEATURE_SSL=0 -DFEATURE_AUTH=0 -DFEATURE_CURL=0
          -DCMAKE_EXPORT_COMPILE_COMMANDS=true
      - name: Hack Add entry for dl_main_curl
        run: |
          sed 's/dl_main_stubs/dl_main_curl/g' -i build/compile_commands.json
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            --define sonar.cfamily.compile-commands="./build/compile_commands.json"
            --define sonar.projectKey=necto_etlegacy
            --define sonar.organization=necto
            --define sonar.sources="src/qcommon"
            --define sonar.cfamily.reproducer="/home/runner/work/etlegacy/etlegacy/src/qcommon/dl_main_curl.c"
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: reproducer
          path: /home/runner/work/etlegacy/sonar-cfamily-reproducer.tar.xz
